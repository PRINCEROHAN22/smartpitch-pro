import os
import sys
from datetime import datetime
import argparse

__version__ = "v1.0"
__author__ = "Eva & Rohan Technologies"

def print_usage():
    print(f"""
SmartPitch CLI – AI-Powered Outreach Generator
Version: {__version__} | Author: {__author__}

Usage:
  python smartpitch.py

Then follow the prompts:
  - Enter client/project name
  - Enter job description
  - Choose a tone (friendly, formal, bold, etc.)

The AI will generate a customized outreach pitch and save it to a text file.

Tips:
• Leave tone blank to use a default tone.
• Generated files are saved with the client's name in 'pitches/' folder.

Powered by EVA & ROHAN TECHNOLOGIES 💛
    """)

# Help flag support
if len(sys.argv) > 1 and sys.argv[1].lower() in ['--help', '-h', 'help']:
    print_usage()
    sys.exit()


def get_client_input():
    print("📝 Enter client details:")
    name = input("Client Name: ")
    business = input("Client Business: ")
    need = input("What they might need (e.g. automation): ")
    platform = input("Platform (LinkedIn, Upwork, etc.): ")
    tone = input("Choose tone (friendly / formal / confident): ").lower()
    return name, business, need, platform, tone

def generate_pitch(name, business, need, platform, tone):
    if tone == "formal":
        greeting = f"Dear {name},"
        opening = f"I recently viewed your profile and work with {business} on {platform}, and I was thoroughly impressed."
        body = f"I specialize in delivering Python-based automation solutions that address challenges like \"{need}\". With a tailored approach, I’d love to explore how I can contribute to your workflow."
        closing = "Kind regards,\nRohan"
    elif tone == "confident":
        greeting = f"Hey {name},"
        opening = f"I checked out your work at {business} via {platform} — really solid stuff."
        body = f"I'm confident I can help you streamline and solve things like \"{need}\" using automation. I bring high-impact solutions that boost efficiency. Let’s chat if you're open."
        closing = "Cheers,\nRohan"
    else:
        greeting = f"Hi {name} 👋"
        opening = f"Loved what you're doing at {business} — I saw your profile on {platform}."
        body = f"I help founders and teams solve things like \"{need}\" using smart Python automation. If you're open, I'd love to share some ideas and see if we can collaborate."
        closing = "Warm wishes,\nRohan"

    # 🎯 Elegant formatted pitch
    formatted = f"""
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎯 SMART OUTREACH PITCH
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

👤 Client/Project: {name}
🗣️ Tone: {tone if tone else "Default"}

📄 Generated Pitch:
{greeting}

{opening}

{body}

{closing}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🤖 Generated by SmartPitch CLI – Eva & Rohan Technologies
💾 Saved in 'pitches/' folder
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
"""
    return formatted


def save_pitch(name, pitch):
    directory = "generated_pitches"
    os.makedirs(directory, exist_ok=True)
    filename = os.path.join(directory, f"{name.replace(' ', '_')}_pitch.txt")
    with open(filename, "w", encoding="utf-8") as file:
        file.write(pitch)
    print(f"✅ Pitch saved to {filename}")


def save_to_log(client_name, output_text):
    log_dir = "smartpitch_logs"
    os.makedirs(log_dir, exist_ok=True)  # make sure folder exists

    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    safe_name = client_name.replace(" ", "_").lower()
    filename = f"{safe_name}_{timestamp}.txt"
    filepath = os.path.join(log_dir, filename)

    with open(filepath, "w", encoding="utf-8") as file:
        file.write(output_text)

    print(f"\n💾 Log saved successfully to: {filepath}\n")



def main():
    name, business, need, platform, tone = get_client_input()
    pitch = generate_pitch(name, business, need, platform, tone)
    print(pitch)
    save_pitch(name, pitch)

if __name__ == "__main__":
    name, business, need, platform, tone = get_client_input()
    pitch = generate_pitch(name, business, need, platform, tone)
    print(pitch)
    save_pitch(name, pitch)
    save_to_log(name, pitch)  # ✅ auto‑saves every generated message
